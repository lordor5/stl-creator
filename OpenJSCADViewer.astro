---
import { onMount } from "solid-js";
import { viewer } from "@jscad/web";
import { serialize } from "@jscad/stl-serializer";
import { primitives, booleans } from "@jscad/modeling";

// Define initial parameters for the JSCAD design
const parameters = {
  width: 10,
  height: 10,
  depth: 10,
};

function create3DModel(params) {
  const { cube } = primitives;
  const { union } = booleans;

  const model = union(
    cube({ size: [params.width, params.height, params.depth] })
  );

  return model;
}

let viewerInstance;

onMount(() => {
  const canvas = document.getElementById("jscad-viewer");

  viewerInstance = viewer({
    canvas,
    initOptions: { camera: { position: [100, 100, 100] } },
  });

  const render = () => {
    const model = create3DModel(parameters);
    viewerInstance.render(model);
  };

  render();
});

function exportSTL() {
  const model = create3DModel(parameters);
  const rawData = serialize({}, model);
  const blob = new Blob(rawData, { type: "application/vnd.ms-pki.stl" });
  const link = document.createElement("a");
  link.href = URL.createObjectURL(blob);
  link.download = "model.stl";
  link.click();
}
---

<section class="space-y-4">
  <canvas id="jscad-viewer" class="w-full h-96 border border-gray-300"></canvas>

  <!-- Control Panel -->
  <div class="flex flex-col gap-2">
    <label>
      Width:
      <input
        type="number"
        value={parameters.width}
        onInput={(e) => (parameters.width = e.currentTarget.valueAsNumber)}
      />
    </label>
    <label>
      Height:
      <input
        type="number"
        value={parameters.height}
        onInput={(e) => (parameters.height = e.currentTarget.valueAsNumber)}
      />
    </label>
    <label>
      Depth:
      <input
        type="number"
        value={parameters.depth}
        onInput={(e) => (parameters.depth = e.currentTarget.valueAsNumber)}
      />
    </label>
    <button onClick={exportSTL} class="bg-blue-500 text-white py-2 px-4 rounded"
      >Export STL</button
    >
  </div>
</section>
